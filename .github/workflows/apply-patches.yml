name: Test Patches

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check-version-branch:
    runs-on: ubuntu-latest
    outputs:
      is_version_branch: ${{ steps.check_version_branch.outputs.is_version_branch }}
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v2

      - name: Get target branch
        id: get_target_branch
        run: echo "::set-output name=target_branch::$(jq -r .pull_request.base.ref $GITHUB_EVENT_PATH)"

      - name: Check if target branch is a version branch
        id: check_version_branch
        run: |
          if [[ "${{ steps.get_target_branch.outputs.target_branch }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::set-output name=is_version_branch::true"
          else
            echo "::set-output name=is_version_branch::false"
          fi

  apply-patches:
    needs: check-version-branch
    if: needs.check-version-branch.outputs.is_version_branch == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v2

      - name: Clone private repo
        run: git clone git@github.com:maarcingebala/workflows-patches.git

      - name: Apply patches
        id: apply_patches
        run: |
          git apply workflows-patches/patches/**.patch
        continue-on-error: true

      - name: Add comment to PR        
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context } = require('@actions/github');
            const issue_number = context.payload.pull_request.number;
            const outcome = '${{ steps.apply_patches.outcome }}';
            const comment = outcome === 'success' ? 'Patches applied successfully' : 'Failed to apply patches';
            await github.issues.createComment({
              ...context.repo,
              issue_number,
              body: comment
            });
